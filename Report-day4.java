/*
  逻辑运算符
  短路与只要遇到false，后面的条件不再执行，整体为false
  短路或只有遇到true，整个为true
  ^ 不代表次方，代表逻辑异或，两者不同则为true
  
  原码、反码、补码(重点 难点）

网上对原码，反码，补码的解释过于复杂，我这里精简几句话：背下来）
对于有符号的而言：
1.二进制的最高位是符号位：0表示正数,1表示负数（口快：0->0 1->-）
2.正数的原码，反码，补码都一样（三码合一）
3.负数的反码=它的原码符号位不变，其它位取反(0-≥1,1->0)
4.负数的补码=它的反码＋1，负数的反码= 负数的补码- 1
5.0的反码，补码都是0
6.java没有无符号数，换章之，iava中的数都是有符号的
7.在计算机运算的时候，都是以补码的方式来运算的.
8.当我们看运算结果的时候，要看他的原码

当 a % b,a是小数时，运算公式 = a -(int)a / b * b
注意有小数参与的运算，最后得到的结果是近似值

*/